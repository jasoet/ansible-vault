# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile for bootstrapping a development Vault cluster with
# VirtualBox provider and Ansible provisioner

ANSIBLE_PLAYBOOK = ENV['ANSIBLE_PLAYBOOK'] || "site.yml"
BOX_MEM = ENV['BOX_MEM'] || "2048"
BOX_NAME = ENV['BOX_NAME'] || "ubuntu/bionic64"
VAULT_HOSTS = ENV['VAULT_HOSTS'] || "vagrant_hosts"
LOGLEVEL = ENV['VAULT_LOGLEVEL'] || "info"
GCS_BUCKET_NAME = ENV['GCS_BUCKET_NAME']
VAGRANTFILE_API_VERSION = "2"

Vagrant.require_version ">= 1.5.0"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  machine_count = 3
  (1..machine_count).each do |machine_id|
    config.vm.define "vault#{machine_id}" do |vault_config|
      vault_config.vm.box = BOX_NAME
      vault_config.vm.network :private_network, ip: "10.1.42.#{240 + machine_id}"
      vault_config.vm.hostname = "vault#{machine_id}"
      vault_config.ssh.forward_agent = true
      vault_config.vm.provider "virtualbox" do |v|
        v.name = "vault-server#{machine_id}"
        v.customize ["modifyvm", :id, "--memory", BOX_MEM]
        v.customize ["modifyvm", :id, "--ioapic", "on"]
        v.customize ["modifyvm", :id, "--cpus", "2"]
        v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      end

      if machine_id == machine_count
        vault_config.vm.provision :ansible do |ansible|
          ansible.inventory_path = VAULT_HOSTS
          ansible.extra_vars = {
              vault_log_level: LOGLEVEL,
          }

          ansible.playbook = ANSIBLE_PLAYBOOK
          ansible.limit = "all"
        end
      end
    end
  end
end
